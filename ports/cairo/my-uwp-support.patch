diff --git a/meson.build b/meson.build
index cc13180..4b1a2e6 100644
--- a/meson.build
+++ b/meson.build
@@ -484,11 +484,18 @@ if host_machine.system() == 'darwin' and not get_option('quartz').disabled()
   endif
 endif
 
+is_uwp = false  # used in src/meson.build
 if host_machine.system() == 'windows'
   add_languages('cpp', native: false)
 
   add_project_arguments('-DWIN32_LEAN_AND_MEAN', '-DNOMINMAX', language: ['c', 'cpp'])
 
+  winapi_family = cc.get_define('WINAPI_FAMILY')
+  is_uwp = ['WINAPI_FAMILY_APP', 'WINAPI_FAMILY_PC_APP', '2'].contains(winapi_family)
+  is_win32 = not is_uwp
+  
+  # When compiling cairo for 'uwp', remove 'win32' stuff.
+  if is_win32
   win32_extra_deps = [
     cc.find_library('gdi32'),
     cc.find_library('msimg32'),
@@ -511,6 +518,7 @@ if host_machine.system() == 'windows'
       'deps': win32_extra_deps,
     }
   ]
+  endif
 
   cpp_compiler = meson.get_compiler('cpp')
   d2d_dep = cpp_compiler.find_library('d2d1', required: get_option('dwrite'))
@@ -521,7 +529,10 @@ if host_machine.system() == 'windows'
   wincodec_dep = cpp_compiler.find_library('windowscodecs', required: get_option('dwrite'))
   wincodec_header = cpp_compiler.has_header('wincodec.h')
 
-  if d2d_dep.found() and dwrite_dep.found() and d2d_header and dwrite_header and wincodec_dep.found() and wincodec_header
+  # TODO: dwrite should be supported in uwp mode
+  if is_uwp
+    add_project_arguments('-DWINVER=_WIN32_WINNT_WIN10', '-D_WIN32_WINNT=_WIN32_WINNT_WIN10', '-DNTDDI_VERSION=NTDDI_WIN10_RS3', language: ['c', 'cpp'])
+  elif d2d_dep.found() and dwrite_dep.found() and d2d_header and dwrite_header and wincodec_dep.found() and wincodec_header
     feature_conf.set('CAIRO_HAS_DWRITE_FONT', 1)
     built_features += [{
       'name': 'cairo-dwrite-font',
diff --git a/src/meson.build b/src/meson.build
index ac06ac6..c20e83e 100644
--- a/src/meson.build
+++ b/src/meson.build
@@ -232,6 +232,12 @@ foreach feature: built_features
   cairo_headers += cairo_feature_headers.get(source_key, [])
 endforeach
 
+if is_uwp
+  # When compiling cairo for 'uwp', 'cairo-win32-system.c' file
+  # is still required, to correctly initialize Win32 mutexes.
+  cairo_sources += ['win32/cairo-win32-system.c']
+endif
+
 incsrc = include_directories('.')
 
 cairo_static_args = []
